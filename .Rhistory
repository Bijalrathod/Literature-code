#INSERT YOUR ANSWER HERE
3
5+
>
3+5
c
?c
x <-seq(1,100)
e <-1:100
1:100
x <-1:100
f <-seq(1,100, by=5)
seq(1,100, by=5)
1:100
y <- seq(1,100, by=5)
seq(1,100, by=5)
source('C:/Users/Bijal/Desktop/assignment 1(123).R', echo=TRUE)
length(x)
lenghth(y)
length(y)
?squares
??squares
x_square <-(3, 6, 7, 10, 15, 22, 23, 24,30)
(3, 6, 7, 10, 15, 22, 23, 24,30)
x<-(3, 6, 7, 10, 15, 22, 23, 24,30)
x <-c(3, 6, 7, 10, 15, 22, 23, 24,30)
x_square <-c(3, 6, 7, 10, 15, 22, 23, 24,30)
x*x_square
xm<- mean(x)
x <-c(3, 6, 7, 10, 15, 22, 23, 24,30)
xm<- mean(x)
c(xm, mean(x, trim=0.10))
median(1:20)
median(1:30)
factorVar <- factor(c(1, 6, 5.4, 3.2));as.numeric(factorVar)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
#Insert your code here.
seq(2,20,by = 2)
data <- read.csv("Admission_Predict.csv")
data <- read.csv("Admission_Predict.csv")
data <- read.csv("Admission_Predict.csv")
data <- read.csv("Admission_Predict.csv")
head(data, n = 3)
str(data)
summary(data)
hist(data$Chance.of.Admit, xlab = "Chance of Admit",
main = "Histogram of Chance of Admit")
cols <- rainbow(length(unique(data$SOP)), s = 0.5)
boxplot( Chance.of.Admit ~ SOP, col = cols, data = data)
cov(data$GRE.Score, data$Chance.of.Admit)
corr_data <- cor(data[,c("GRE.Score", "TOEFL.Score", "CGPA", "Chance.of.Admit")])
corr_data
corr_data
library(ggplot2)
library(ggplot2)
cov(data$GRE.Score, data$Chance.of.Admit)
library(ggplot2)
library(ggplot2)
library(ggplot2)
library(ggplot2)
g <- ggplot(data, aes(x = Chance.of.Admit, y = GRE.Score))
g <- g + geom_point(colour='green')
g + ggtitle("GRE.Score vs Chance.of.Admit")
library(ggplot2)
g <- ggplot(data, aes(x = Chance.of.Admit, y = TOEFL.Score))
g <- g + geom_point(colour='red')
g + ggtitle("TOEFL.Score vs Chance.of.Admit")
g <- ggplot(data, aes(x = Chance.of.Admit, y = CGPA))
g <- g + geom_point(colour='blue')
g + ggtitle("CGPA vs Chance.of.Admit")
model <- lm(Chance.of.Admit ~ GRE.Score, data = data)
model <- lm(Chance.of.Admit ~ GRE.Score, data = data)
plot(data$GRE.Score, data$Chance.of.Admit, xlab = "GRE Score",
ylab ="Chance of Admit", main = "GRE Score vs Chance of Admit")
abline(model, col='red')
summary(model)
summary(model)
length(model$residuals)
res <- summary(model)
res$r.squared
res$coefficients
chance.of.admit = -2.436084245 + 0.009975882*310
chance.of.admit
chance.of.admit = 0.5
GRE.score = (chance.of.admit + 2.436084245)/0.009975882
GRE.score
model2 <- lm(Chance.of.Admit ~ GRE.Score + TOEFL.Score + CGPA, data = data)
summary(model2)
res <- summary(model2)
res$coefficients
chance.of.admit.pred <- predict(model2, data[c(3, 23),])
chance.of.admit.pred
chance.of.admit.pred
chance.of.admit.pred[2]-chance.of.admit.pred[1]
summary(model)
summary(model2)
anova(model, model2)
#Insert your code here.
seq(2,20,by = 2)
data <- read.csv("Admission_Predict.csv")
head(data, n = 3)
str(data)
summary(data)
hist(data$Chance.of.Admit, xlab = "Chance of Admit",
main = "Histogram of Chance of Admit")
cols <- rainbow(length(unique(data$SOP)), s = 0.5)
boxplot( Chance.of.Admit ~ SOP, col = cols, data = data)
cov(data$GRE.Score, data$Chance.of.Admit)
corr_data <- cor(data[,c("GRE.Score", "TOEFL.Score", "CGPA", "Chance.of.Admit")])
corr_data
corr_data
library(ggplot2)
# INSERT YOUR CODE HERE.
USDAclean <- read.csv("USDA_Clean.csv")
# INSERT YOUR CODE HERE.
str(USDAclean)
# INSERT YOUR CODE HERE.
library(corrplot)
installed.packages(corrplot)
installed.packages("corrplot")
library(corrplot)
("corrplot")
library("corrplot")
# INSERT YOUR CODE HERE.
USDAclean <- read.csv("USDA_Clean.csv")
# INSERT YOUR CODE HERE.
str(USDAclean)
# INSERT YOUR CODE HERE.
library(corrplot)
library(corrplot)
install.packages("corrplot")
library(corrplot)
library(corrplot)
# INSERT YOUR CODE HERE.
USDAclean <- read.csv("USDA_Clean.csv")
# INSERT YOUR CODE HERE.
str(USDAclean)
# INSERT YOUR CODE HERE.
library(corrplot)
features <- c("Calories", "Protein", "TotalFat",
"Carbohydrate", "Sodium", "Cholesterol")
corrplot(cor(USDAclean[, features]))
# INSERT YOUR CODE HERE AND EXPLAIN YOUR ANSWER AS A COMMENT.
cor.test(USDAclean$Calories, USDAclean$TotalFat)
# The correlation between Calories and Total Fat is 0.80, which is
# significant, as p-value is less than 0.05 significance level, it rejects the
# null hypothesis.
# INSERT YOUR CODE HERE.
model <- lm(Calories ~ Protein + TotalFat + Carbohydrate + Sodium + Cholesterol,
data = USDAclean)
summary(model)
# WRITE YOUR ANSWER AS A COMMENT.
# Calories = 3.988 + 3.989*Protein + 8.77*TotalFat + 3.74*Carbohydrate +
#             0.000338*Sodium + 0.011*Cholesterol
# INSERT YOUR CODE HERE AND EXPLAIN YOUR ANSWER AS A COMMENT.
# Sodium is the least significant as its coefficient is almost 0.
# the p-value is less than 0.05 significance level, which indicates
# the coefficient is significantly 0.
# INSERT YOUR CODE HERE.
predicted_calorie <- predict(model, list("Protein"=0.1, "TotalFat"=35,
"Carbohydrate"=405, "Sodium"=440,
"Cholesterol"=70, "Sugar"=NA,
"Calcium"=35, "Iron"=NA,
"Potassium"=35,
"VitaminC"=10,	"VitaminE"=NA,
"VitaminD"=NA))
predicted_calorie
# INSERT YOUR CODE HERE AND EXPLAIN YOUR ANSWER AS A COMMENT.
predicted_calorie <- predict(model, list("Protein"=0.1, "TotalFat"=35,
"Carbohydrate"=405, "Sodium"=44440,
"Cholesterol"=70, "Sugar"=NA,
"Calcium"=35, "Iron"=NA,
"Potassium"=35,
"VitaminC"=10,	"VitaminE"=NA,
"VitaminD"=NA))
predicted_calorie
# The coefficient of the Sodium is almost 0 i.e. 0.0003383, which shows
# one unit increase in the sodium would not increase the calorie significantly.
# INSERT YOUR ANSWER AS A COMMENT.
# H_0: There is no significant difference between the medians of Article 1
# and Article 2.
# H_1: The difference between the medians of Article 1 and Article 2 is
# significant and not 0.
# INSERT YOUR ANSWER AS A COMMENT.
# It is paired experiment as same reader participated in both experiments i.e.
# reads Article 1 and Article 2 both.
# INSERT YOUR ANSWER AS A COMMENT.
# Paired Wilcoxon rank sum non-parametric test would be used for comparing medians of
# non-normal data.
# INSERT YOUR CODE HERE.
Article1 <-   c(0.40,   0.72,   0.00,   0.36,   0.55)
Article2 <-   c(0.77,   0.49,   0.66,   0.28,   0.38)
wilcox.test(Article1, Article2, paired=TRUE)
# INSERT YOUR ANSWER AS A COMMENT.
# As p-value (0.8125) > 0.05 significance level, which shows we are failed
# to reject the null hypothesis. Hence, accept the null hypothesis i.e.
# There is no significant difference between the medians of Article 1
# and Article 2.
# INSERT YOUR ANSWER AS A COMMENT.
# As two different company products are used in experiment, it is an unpaired
# experiment.
# INSERT YOUR ANSWER AS A COMMENT.
# Unpaired Wilcoxon rank sum non-parametric test would be used for comparing
# medians of non-normal data.
# INSERT YOUR CODE HERE.
CompanyA <- c(97.1,   101.3,   107.8,   101.9,   97.4,  104.5,  99.5,   95.1)
CompanyB <- c(103.5,  105.3,   106.5,   107.9,   102.1, 105.6, 109.8,   97.2)
wilcox.test(CompanyA, CompanyB, paired=FALSE)
# INSERT YOUR ANSWER AS A COMMENT.
# As p-value (0.04988) < 0.05 significance level, which shows we reject the
# null hypothesis. Packaging process is different based on weight measurements,
# as the difference of medians of weight of Company A and Company B is
# statistically significant and different.
# INSERT YOUR CODE HERE.
USDAclean <- read.csv("USDA_Clean.csv")
# INSERT YOUR CODE HERE.
str(USDAclean)
# INSERT YOUR CODE HERE.
library(corrplot)
features <- c("Calories", "Protein", "TotalFat",
"Carbohydrate", "Sodium", "Cholesterol")
corrplot(cor(USDAclean[, features]))
# INSERT YOUR CODE HERE AND EXPLAIN YOUR ANSWER AS A COMMENT.
cor.test(USDAclean$Calories, USDAclean$TotalFat)
# The correlation between Calories and Total Fat is 0.80, which is
# significant, as p-value is less than 0.05 significance level, it rejects the
# null hypothesis.
# INSERT YOUR CODE HERE.
model <- lm(Calories ~ Protein + TotalFat + Carbohydrate + Sodium + Cholesterol,
data = USDAclean)
summary(model)
# WRITE YOUR ANSWER AS A COMMENT.
# Calories = 3.988 + 3.989*Protein + 8.77*TotalFat + 3.74*Carbohydrate +
#             0.000338*Sodium + 0.011*Cholesterol
# INSERT YOUR CODE HERE AND EXPLAIN YOUR ANSWER AS A COMMENT.
# Sodium is the least significant as its coefficient is almost 0.
# the p-value is less than 0.05 significance level, which indicates
# the coefficient is significantly 0.
# INSERT YOUR CODE HERE.
predicted_calorie <- predict(model, list("Protein"=0.1, "TotalFat"=35,
"Carbohydrate"=405, "Sodium"=440,
"Cholesterol"=70, "Sugar"=NA,
"Calcium"=35, "Iron"=NA,
"Potassium"=35,
"VitaminC"=10,	"VitaminE"=NA,
"VitaminD"=NA))
predicted_calorie
# INSERT YOUR CODE HERE AND EXPLAIN YOUR ANSWER AS A COMMENT.
predicted_calorie <- predict(model, list("Protein"=0.1, "TotalFat"=35,
"Carbohydrate"=405, "Sodium"=44440,
"Cholesterol"=70, "Sugar"=NA,
"Calcium"=35, "Iron"=NA,
"Potassium"=35,
"VitaminC"=10,	"VitaminE"=NA,
"VitaminD"=NA))
predicted_calorie
# The coefficient of the Sodium is almost 0 i.e. 0.0003383, which shows
# one unit increase in the sodium would not increase the calorie significantly.
# INSERT YOUR ANSWER AS A COMMENT.
# H_0: There is no significant difference between the medians of Article 1
# and Article 2.
# H_1: The difference between the medians of Article 1 and Article 2 is
# significant and not 0.
# INSERT YOUR ANSWER AS A COMMENT.
# It is paired experiment as same reader participated in both experiments i.e.
# reads Article 1 and Article 2 both.
# INSERT YOUR ANSWER AS A COMMENT.
# Paired Wilcoxon rank sum non-parametric test would be used for comparing medians of
# non-normal data.
# INSERT YOUR CODE HERE.
Article1 <-   c(0.40,   0.72,   0.00,   0.36,   0.55)
Article2 <-   c(0.77,   0.49,   0.66,   0.28,   0.38)
wilcox.test(Article1, Article2, paired=TRUE)
# INSERT YOUR ANSWER AS A COMMENT.
# As p-value (0.8125) > 0.05 significance level, which shows we are failed
# to reject the null hypothesis. Hence, accept the null hypothesis i.e.
# There is no significant difference between the medians of Article 1
# and Article 2.
# INSERT YOUR ANSWER AS A COMMENT.
# As two different company products are used in experiment, it is an unpaired
# experiment.
# INSERT YOUR ANSWER AS A COMMENT.
# Unpaired Wilcoxon rank sum non-parametric test would be used for comparing
# medians of non-normal data.
# INSERT YOUR CODE HERE.
CompanyA <- c(97.1,   101.3,   107.8,   101.9,   97.4,  104.5,  99.5,   95.1)
CompanyB <- c(103.5,  105.3,   106.5,   107.9,   102.1, 105.6, 109.8,   97.2)
wilcox.test(CompanyA, CompanyB, paired=FALSE)
# INSERT YOUR ANSWER AS A COMMENT.
# As p-value (0.04988) < 0.05 significance level, which shows we reject the
# null hypothesis. Packaging process is different based on weight measurements,
# as the difference of medians of weight of Company A and Company B is
# statistically significant and different.
# INSERT YOUR CODE HERE.
USDAclean <- read.csv("USDA_Clean.csv")
# INSERT YOUR CODE HERE.
str(USDAclean)
# INSERT YOUR CODE HERE.
library(corrplot)
features <- c("Calories", "Protein", "TotalFat",
"Carbohydrate", "Sodium", "Cholesterol")
corrplot(cor(USDAclean[, features]))
# INSERT YOUR CODE HERE AND EXPLAIN YOUR ANSWER AS A COMMENT.
cor.test(USDAclean$Calories, USDAclean$TotalFat)
# The correlation between Calories and Total Fat is 0.80, which is
# significant, as p-value is less than 0.05 significance level, it rejects the
# null hypothesis.
# INSERT YOUR CODE HERE.
model <- lm(Calories ~ Protein + TotalFat + Carbohydrate + Sodium + Cholesterol,
data = USDAclean)
summary(model)
# WRITE YOUR ANSWER AS A COMMENT.
# Calories = 3.988 + 3.989*Protein + 8.77*TotalFat + 3.74*Carbohydrate +
#             0.000338*Sodium + 0.011*Cholesterol
# INSERT YOUR CODE HERE AND EXPLAIN YOUR ANSWER AS A COMMENT.
# Sodium is the least significant as its coefficient is almost 0.
# the p-value is less than 0.05 significance level, which indicates
# the coefficient is significantly 0.
# INSERT YOUR CODE HERE.
predicted_calorie <- predict(model, list("Protein"=0.1, "TotalFat"=35,
"Carbohydrate"=405, "Sodium"=440,
"Cholesterol"=70, "Sugar"=NA,
"Calcium"=35, "Iron"=NA,
"Potassium"=35,
"VitaminC"=10,	"VitaminE"=NA,
"VitaminD"=NA))
predicted_calorie
# INSERT YOUR CODE HERE AND EXPLAIN YOUR ANSWER AS A COMMENT.
predicted_calorie <- predict(model, list("Protein"=0.1, "TotalFat"=35,
"Carbohydrate"=405, "Sodium"=44440,
"Cholesterol"=70, "Sugar"=NA,
"Calcium"=35, "Iron"=NA,
"Potassium"=35,
"VitaminC"=10,	"VitaminE"=NA,
"VitaminD"=NA))
predicted_calorie
# The coefficient of the Sodium is almost 0 i.e. 0.0003383, which shows
# one unit increase in the sodium would not increase the calorie significantly.
# INSERT YOUR ANSWER AS A COMMENT.
# H_0: There is no significant difference between the medians of Article 1
# and Article 2.
# H_1: The difference between the medians of Article 1 and Article 2 is
# significant and not 0.
# INSERT YOUR ANSWER AS A COMMENT.
# It is paired experiment as same reader participated in both experiments i.e.
# reads Article 1 and Article 2 both.
# INSERT YOUR ANSWER AS A COMMENT.
# Paired Wilcoxon rank sum non-parametric test would be used for comparing medians of
# non-normal data.
# INSERT YOUR CODE HERE.
Article1 <-   c(0.40,   0.72,   0.00,   0.36,   0.55)
Article2 <-   c(0.77,   0.49,   0.66,   0.28,   0.38)
wilcox.test(Article1, Article2, paired=TRUE)
# INSERT YOUR ANSWER AS A COMMENT.
# As p-value (0.8125) > 0.05 significance level, which shows we are failed
# to reject the null hypothesis. Hence, accept the null hypothesis i.e.
# There is no significant difference between the medians of Article 1
# and Article 2.
# INSERT YOUR ANSWER AS A COMMENT.
# As two different company products are used in experiment, it is an unpaired
# experiment.
# INSERT YOUR ANSWER AS A COMMENT.
# Unpaired Wilcoxon rank sum non-parametric test would be used for comparing
# medians of non-normal data.
# INSERT YOUR CODE HERE.
CompanyA <- c(97.1,   101.3,   107.8,   101.9,   97.4,  104.5,  99.5,   95.1)
CompanyB <- c(103.5,  105.3,   106.5,   107.9,   102.1, 105.6, 109.8,   97.2)
wilcox.test(CompanyA, CompanyB, paired=FALSE)
# INSERT YOUR ANSWER AS A COMMENT.
# As p-value (0.04988) < 0.05 significance level, which shows we reject the
# null hypothesis. Packaging process is different based on weight measurements,
# as the difference of medians of weight of Company A and Company B is
# statistically significant and different.
iris<-iris[,1:4]
head(iris)
cor(iris)
pc_iris<-princomp(iris,cor=TRUE, score=TRUE)
View(pc_iris)
load("C:/Users/Bijal/Downloads/AxLVdsVG49X2FpqYSYcs.Rmd")
